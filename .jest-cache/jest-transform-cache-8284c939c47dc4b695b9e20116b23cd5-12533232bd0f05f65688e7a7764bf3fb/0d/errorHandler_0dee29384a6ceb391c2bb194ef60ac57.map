{"file":"C:\\Users\\drewp\\OneDrive\\Desktop\\incredible peptides\\incredible-peptides\\lib\\errorHandler.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,8CA+BC;AAnCD,uDAAwC;AAIxC,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,KAAK,EAAE,GAAY,EAAE,EAAE;QAC5B,IAAI,CAAC;YACH,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,CAAA;QAC3B,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAA;YACvC,IAAI,CAAC;gBACH,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YAChC,CAAC;YAAC,WAAM,CAAC,CAAA,CAAC;YAEV,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAA;YACjD,IAAI,OAAO,EAAE,CAAC;gBACZ,MAAM,OAAO,GAAG;oBACd,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ;oBAC/B,OAAO,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,eAAe;oBAC1C,KAAK,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK;iBACpB,CAAA;gBACD,KAAK,CAAC,OAAO,EAAE;oBACb,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;oBAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;oBAC7B,KAAK,EAAE,UAAU;iBAClB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;YACpB,CAAC;YAED,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,EAAE;gBAC7D,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;aAChD,CAAC,CAAA;QACJ,CAAC;IACH,CAAC,CAAA;AACH,CAAC","names":[],"sources":["C:\\Users\\drewp\\OneDrive\\Desktop\\incredible peptides\\incredible-peptides\\lib\\errorHandler.ts"],"sourcesContent":["import * as Sentry from '@sentry/nextjs'\n\ntype Handler = (req: Request) => Promise<Response>\n\nexport function withErrorHandling(handler: Handler): Handler {\n  return async (req: Request) => {\n    try {\n      return await handler(req)\n    } catch (error: any) {\n      console.error('API route error', error)\n      try {\n        Sentry.captureException(error)\n      } catch {}\n\n      const webhook = process.env.N8N_ERROR_WEBHOOK_URL\n      if (webhook) {\n        const payload = {\n          path: new URL(req.url).pathname,\n          message: error?.message || 'Unknown error',\n          stack: error?.stack,\n        }\n        fetch(webhook, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n          cache: 'no-store',\n        }).catch(() => {})\n      }\n\n      return new Response(JSON.stringify({ error: 'Server error' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      })\n    }\n  }\n}"],"version":3}